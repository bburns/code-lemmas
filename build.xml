<?xml version="1.0"?>


<project name="code-lemmas" default="main" basedir=".">

  <!-- Properties -->
  <!-- Sets variables which can later be used. -->
  <!-- The value of a property is accessed via ${} -->
  <property name="src.dir" location="src" />
  <property name="classes.dir" location="build/classes" />
  <property name="docs.dir" location="build/docs" />
  <property name="jar.dir" location="build/jar" />

  
  <!-- Clean -->
  <target name="clean">
    <delete dir="${classes.dir}" />
    <delete dir="${docs.dir}" />
    <delete dir="${jar.dir}" />
  </target>

  
  <!-- Makedirs -->
  <target name="makedir">
    <mkdir dir="${classes.dir}" />
    <mkdir dir="${docs.dir}" />
    <mkdir dir="${jar.dir}" />
  </target>

  
  <!-- Compile -->
  <!-- javac -Xlint:all -Werror %1.java && java -ea %1 -->
<!-- :: > javac -Xlint:all -Werror -g -verbose [-classpath foo] -d classfiles foo.java [more.java] -->
<!-- ::   -Xlint                     Enable recommended warnings -->
<!-- ::   -Werror                    Terminate compilation if warnings occur -->
<!-- ::   -g                         Generate all debugging info -->
<!-- ::   -verbose                   Output messages about what the compiler is doing -->
<!-- ::   -classpath <path>          Specify where to find user class files and annotation processors -->
<!-- ::   -d <directory>             Specify where to place generated class files -->
  <!-- <target name="compile" depends="clean, makedir"> -->
  <target name="compile">
    <javac srcdir="${src.dir}" destdir="${classes.dir}" includeAntRuntime="false" debug="on">
      <compilerarg value="-Xlint"/>
      <compilerarg value="-Werror"/>
    </javac>
  </target>

  
  <!-- Javadoc -->
  <target name="docs" depends="compile">
    <javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
      <!-- Define which files / directory should get included, we include all -->
       <fileset dir="${src.dir}">
         <include name="**" />
         </fileset>
    </javadoc>
  </target>

  
  <!-- Jar -->
  <target name="jar" depends="compile">
    <jar destfile="${jar.dir}\JavaLemmas.jar" basedir="${classes.dir}">
      <manifest>
        <attribute name="Main-Class" value="ds.Trie" />
      </manifest>
    </jar>
  </target>

  
  <!-- Tests -->
  <!-- compile and run unit tests	Does not depend on build.  ?  -->
  <!-- <target name="test" depends="compile"> -->
    <!-- <java > -->
  <!-- </target> -->
  
  
  <!-- Main -->
  <!-- <target name="main" depends="compile, jar, docs"> -->
  <target name="main" depends="compile">
    <description>Main target</description>
  </target>
  
  
  
  <!-- Run -->
  <!-- need fork for assertions or jar files -->
  <target name="run" depends="compile">
    <!-- <java jar="build/jar/JavaLemmas.jar" fork="true"/> -->
    <java classname="ds.Trie" classpath="build/classes" fork="true">
      <assertions> <enable/> </assertions>
    </java>
  </target>
  
  
</project> 


